b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, and Russian, and Vietnamese as well.\nChef recently accepted a teaching fellowship at a prestigious culinary institution. The fellowship does not begin for a while yet, so Chef wants to use the remaining free time for a nice vacation. There are NN cities (numbered 11 through NN) connected by M roads. For each valid i, there are Li tourist attractions in city i. Chef is initially in city 1 and he will teach in city N. On each day of his vacation, Chef wants to perform one of the following actions:\n\nTravel to a city with a higher number than his current city which is directly connected to his current city by a road. At the end of his vacation, Chef must be in city N.\nVisit a tourist attraction in his current city. Chef may visit each tourist attraction repeatedly (on different days).\n\nChef has not yet decided for how many days the vacation should last. He has Q queries described by a sequence D1,D2,\xe2\x80\xa6,DQ. For each query, i.e. for each i (1\xe2\x89\xa4i\xe2\x89\xa4Q), he would like to know the number of different vacation plans if he wants his vacation to last exactly Di days. Since these numbers may be large, compute them modulo 1,000,000,007.\nTwo vacation plans (for a fixed duration of the vacation) are considered different if there is at least one day such that Chef performs different actions in the two plans on that day. Visiting different tourist attractions also counts as different actions.\nInput\n\nThe first line of the input contains three space-separated integers N, M and Q.\nThe second line contains N space-separated integers L1,L2,\xe2\x80\xa6,LN.\nEach of the next M lines contains two space-separated integers u and v denoting that cities u and v are connected by a road.\nThe last line contains Q space-separated integers D1,D2,\xe2\x80\xa6,DQ.\n\nOutput\nFor each query, print a single line containing one integer \xe2\x80\x95 the number of possible vacations modulo 1,000,000,007.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa44,000\n1\xe2\x89\xa4M\xe2\x89\xa4105\n1\xe2\x89\xa4Q\xe2\x89\xa4500\n1\xe2\x89\xa4Li\xe2\x89\xa4105 for each valid i\n1\xe2\x89\xa4u<v\xe2\x89\xa4N\n1\xe2\x89\xa4Di\xe2\x89\xa41018 for each valid i\n\nSubtasks\nSubtask #1 (5 points): Di\xe2\x89\xa42,000 for each valid i\nSubtask #2 (10 points): N\xe2\x89\xa410\nSubtask #3 (20 points):\n\nN\xe2\x89\xa41,500\nDi\xe2\x89\xa450,000 for each valid i\n\nSubtask #4 (20 points): N\xe2\x89\xa4100\nSubtask #5 (45 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n4 4 4\n2 6 6 7\n1 2\n1 3\n2 4\n3 4\n1 2 3 4\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n0\n2\n30\n314\n\n\nExplanation\nSince there is no road directly connecting city 1 to city 4, there are no valid vacations that only last 1 day, so the answer to the first query is 0.\nThere are two ways to get to city 4 in 2 days ? either travel from city 1 to city 2 on the first day and from city 2 to city 4 on the second day, or travel from city 1 to city 3 on the first day and from city 3 to city 4 on the second day. Neither option gives Chef any time for sightseeing, though.\nWith 3 days, Chef can spend one day at a tourist attraction and the other two days travelling, with 30 possible trips in total.\n\n\n\nAuthor:\ndavid_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TRIPWAYS\n\n\nTags:\n\n               \n                 Graphs, Generating Functions, Matrix Exponentiation, Berlekamp Massey Algorithm\n                 \n                     \n                     Data Structures, Mathematics, Sequences and Progression, Matrices, Error Detection, Matrix Multiplication\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2983\n\n\nDate Added:\n17-02-2020\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'