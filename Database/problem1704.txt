b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef recently read about the mex function and came up with a function similar to that. For a (possibly empty) sequence of positive integers S, Chef defines f(S) as the smallest positive integer that does not appear in S. For example, f([])=1, f([3,4,3,5])=1, f([2,5,1,1,2,3])=4.\nChef's friend heard about Chef's idea and found it really cool. Therefore, he sent a sequence a1,a2,\xe2\x80\xa6,aN to Chef and asked him to find the sum of f(S) over all 2N possible subsequences S of this sequence. Since Chef is busy, he entrusted you with solving the problem.\nSince the resulting sum can be very big, compute it modulo 998,244,353.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a single integer N.\nThe second line contains N space-separated integers a1,a2,\xe2\x80\xa6,aN.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the sum of f(S) over all subsequences modulo 998,244,353.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa450\n1\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4ai\xe2\x89\xa4109 for each valid i\nthe sum of N over all test cases does not exceed 5\xe2\x8b\x85105\n\nSubtasks\nSubtask #1 (50 points): the sum of N over all test cases does not exceed 1,000\nSubtask #2 (50 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n2\n1 1\n3\n1 2 1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n7\n17\n\n\nExplanation\nExample case 1: The values for all possible subsequences are f([])=1, f([1])=2, f([1])=2, f([1,1])=2.\nExample case 2: The values for all possible subsequences are f([])=1, f([1])=2, f([2])=1, f([1])=2, f([1,2])=3, f([2,1])=3, f([1,1])=2, f([1,2,1])=3.\n\n\n\nAuthor:\n6\xe2\x98\x85nirjhor\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MEXUM\n\n\nTags:\n\n               \n                 Modular Exponentiation\n                 \n                     \n                     Mathematics, Modular Arithmetic\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2153\n\n\nDate Added:\n20-04-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"