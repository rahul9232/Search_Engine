b'\nRead problems statements Mandarin , Bengali , Hindi , Russian and Vietnamese as well.\nConsider a seven-segment display, which can be used to show a decimal digit (00 through 99). When a digit is shown on a working display, specific segments of the display turn on, as depicted in the following image (for digits 11 through 99):\n\n0 is depicted as usual, with all the segments turned on, except the middle one.\nSome of the segments of this display (possibly all or none) are dead \xe2\x80\x95 they never turn on. In order to find out which segments could be dead, we ran N tests with the display. For each i (1\xe2\x89\xa4i\xe2\x89\xa4N), in the i-th test, we tried to show the digit xi and out of the 7 segments of the display, yi segments turned on.\nIt is possible that the results of tests have been recorded incorrectly. Determine if the recorded results are valid, i.e. if there is a set of dead segments such that in each test, the recorded number of segments that turned on is correct. If it is valid, calculate the minimum possible number of dead segments and the maximum possible number of dead segments consistent with the results of the tests.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a single integer N.\nN lines follow. For each i (1\xe2\x89\xa4i\xe2\x89\xa4N), the i-th of these lines contains two space-separated integers xi and yi.\n\nOutput\nFor each test case:\n\nIf the results of tests are invalid, print a single line containing the string "invalid" (without quotes).\nOtherwise, print a single line containing two space-separated integers \xe2\x80\x95 the minimum and maximum number of dead segments.\n\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41,000\n1\xe2\x89\xa4N\xe2\x89\xa410\n0\xe2\x89\xa4xi\xe2\x89\xa49 for each valid i\n0\xe2\x89\xa4yi\xe2\x89\xa47 for each valid i\nx1,x2,\xe2\x80\xa6,xN are pairwise distinct\n\nSubtasks\nSubtask #1 (20 points): N=1\nSubtask #2 (80 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n2\n2 4\n5 4\n2\n8 6\n0 7\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1 2\ninvalid\n\n\n\n\n\nAuthor:\n4\xe2\x98\x85erfaniaa\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SEVENSEG\n\n\nTags:\n\n               \n                 Conditional Statements, Bitmasking, Subset Enumeration, Observation, Implementation\n                 \n                     \n                     Basic Programming Concepts, Mathematics, Bit Manipulation, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2226\n\n\nDate Added:\n27-03-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'