b'\n\nEveryone knows the famous detective Sherlock. He has been handed over a new case of "The Abominable Bride". Each night she kills N people but to irritate \nSherlock she leaves exactly one people. The way she kills the people is somewhat strange. She makes 1 to N people stand in a line and starts killing \nthem. But, in the line when she kills the first person, there\'s time for the person standing next in line to run away at the end of the line.Again she kills the first \nperson and the second one next to him runs to the last of the line. In this way after killing, there is exactly one person standing in the line who is saved and he \nruns to Sherlock to explain the situation each night. Help Sherlock find out the person that will be saved at the end of the massacre.\nConstraints and Subtasks\n\n1<=T<=100000\n1<=N<=1000000\n\nSubtask 2: 20 points\n\n1<=T<=100\n\nSubtask 2: 80 points\n\noriginal constraints\n\nInput:\n\nThe first line of input contains a single integer T denoting the number of test cases.\nThe first and only line of each test case contains an integer N denoting the number of people standing in line.\n\nOutput:\n\nFor each test case, output the person who will be meeting Sherlock at the end of the massacre.\nExample\nInput:\n5\n2\n4\n6\n9\n12\n\nOutput:\n2\n4\n4\n2\n8\n\nExplanation\n\nFor the 2nd test case, she kills 1 and 2 goes at the end of line i.e., 3 4 2. Then she kills 3rd and 4th goes at the end of line i.e. 2 4. Then she kills 2 and \nultimately 4th is the lone survivour.\n\n\n\nAuthor:\n5\xe2\x98\x85adi28galaxyak\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CDVA1604\n\n\nTags:\n\n               \n                 ad-hoc, adi28galaxyak, cdva16, easy, implementation\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n30-01-2016\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'