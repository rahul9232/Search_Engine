b"\nRead problem statements in Mandarin, Bengali, and Russian as well.\nChef is a wanted criminal, and NN police officers are up for catching him. The officers want to catch Chef no matter the cost, and Chef also wants to eliminate as many officers as possible (preferably everyone) before getting caught (or before running away after eliminating everyone). Neither the officers nor Chef will run away before accomplishing their goals.\nChef and the officers are on a one-dimensional grid with coordinates ranging from \xe2\x88\x921010\xe2\x88\x921010 to 10101010. Chef is initially standing at coordinate CC, and the ii-th officer is initially at coordinate PiPi. The officers and Chef then take turns to move, with the officer team moving first. \nDuring their turn, officers will have to move to an adjacent unoccupied cell one by one, in any order they want. Every officer will have to move. At every moment of time, no two officers can be in the same cell, and also no officer can be in the same cell as Chef. If the officer is unable to move to an adjacent unoccupied cell, he is eliminated (and the cell he was in becomes unoccupied). Note that the officer team will try to move to eliminate as few officers as possible. For example, with P=[2,3,4]P=[2,3,4] and C=6C=6, then the next positions of the officers can be [1,2,3][1,2,3], [1,2,5][1,2,5], [1,4,5][1,4,5], or [3,4,5][3,4,5]. However, with P=[2,3,4]P=[2,3,4] and C=5C=5, the only possible set of the next positions of the officers is [1,2,3][1,2,3].\nAfter the officer team's turn, Chef also moves to an adjacent unoccupied cell, or gets caught if he cannot find any adjacent unoccupied cell. The process then repeats until either Chef is caught, or all officers are eliminated and Chef runs away.\nYou need to find out the maximum number of officers that can be eliminated by Chef, and if Chef can run away or not.\nAs a reminder, two cells with coordinates XX and YY are adjacent if and only if |X\xe2\x88\x92Y|=1|X\xe2\x88\x92Y|=1.\nInput Format\n\nThe first line contains TT - the number of test cases. Then the test cases follow.\nThe first line of each test case contains a single integer NN - the number of officers.\nThe second line of each test case contains a single integer CC - the initial coordinate of Chef.\nThe third line of each test case contains NN integers P1,P2,\xe2\x80\xa6,PNP1,P2,\xe2\x80\xa6,PN - the initial coordinates of the officers.\n\nOutput Format\nFor each test case, output on a single line two space-separated integers: the first integer is the maximum number of officers that can be eliminated by Chef, and the second integer is 11 if Chef runs away or \xe2\x88\x921\xe2\x88\x921 if Chef will be caught.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4C\xe2\x89\xa41091\xe2\x89\xa4C\xe2\x89\xa4109\n1\xe2\x89\xa4Pi\xe2\x89\xa41091\xe2\x89\xa4Pi\xe2\x89\xa4109\nAll the coordinates are unique. That means Pi\xe2\x89\xa0CPi\xe2\x89\xa0C for all 1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N, and Pi\xe2\x89\xa0PjPi\xe2\x89\xa0Pj for all 1\xe2\x89\xa4i<j\xe2\x89\xa4N1\xe2\x89\xa4i<j\xe2\x89\xa4N\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n2\n2\n1 4\n1\n2\n1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1 -1\n1 1\n\n\nExplanation\n\nTest case 11: Chef chooses to always move to the left (i.e. to the smaller coordinate); this forces the officer at coordinate 11 to always move to the left, and eventually being cornered and eliminated. However, the officer at coordinate 44 cannot be eliminated, and hence Chef will be caught at the end.\nTest case 22: Similarly, Chef chooses to always move to the left, and eventually eliminating the only officer, thus running away at the end.\n\n\n\n\nAuthor:\n5\xe2\x98\x85ashish99hanny\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CHEF7UP\n\n\nTags:\n\n               \n                 Loops, Basic Maths, ad-hoc, Sorting, Observation\n                 \n                     \n                     Basic Programming Concepts, Mathematics, Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2494\n\n\nDate Added:\n22-10-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"