b'\n\xc2\xa0\nYour friend Ayman has started a course for learning to play guitar. The instructor introduces him the basic functionality of guitar. The fret board is the element where guitar strings are placed on it. The fret board has been assigned some numbers for denoting each of the fret.  Number 1 to 12 has been assigned for numbering each of the fret. The picture will help you understand.  Besides, there are six strings which are denoted by E, B, G, D, A, E (from top to bottom) in standard tuning. Finding particular note for the particular fret position and string is very important. There are basically 12 important notes. The followings are the notes which maintain the ordering:\n \n\nThe note continues circularly. That means after the B there will be C, C#, D . . . .  etc. For each fret of a particular string the notes follow the above ordering. For example, considering the E string (1st String), in the first fret it will have the note F, then for the second fret is F#, for the third is G and it maintains above pattern of the chart up-to fret 12.  \n \n\xc2\xa0Your friend, Ayman becomes confused finding out the note. Can you assist him to find out the particular fret note of a given string?\nInput\nFirst of all there will be T test cases.  For each of the test case, there will be two integer value  f (1<=f<=12) and s (1<=s<=6) , were f denotes the position of the fret and s denotes the string number (here, the strings are numbered 1 to 6 from top to bottom)\nOutput\nFor each test case, print a line \xe2\x80\x9cCase x: y\xe2\x80\x9d where x is replaced by the test case number and y is replaced by the note of that particular fret for that particular guitar string.\nExample\nInput:\n5\t\n1\t1\n4\t2\n12\t3\n8\t4\n8\t6\n\n\n\nOutput: \n\nCase 1: F\nCase 2: D#\nCase 3: G\nCase 4: A#\nCase 5: C\n\n\n\xc2\xa0\n\n\n\nAuthor:\n3\xe2\x98\x85shakilaust\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/AUNX\n\n\nTags:\n\n               \n                 ad-hoc, aust2016, shakilaust\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n15-01-2016\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'