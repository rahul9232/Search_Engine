b"\nRecently Anupam was working with a function defined as follows:\nThe function takes an integer NN as argument. Suppose there are NN people sitting in a circular queue numbered 1 to N. The function returns the number of ways we can select a subset of them such that no 2 selected people are adjacent to each other.\nRajarshi heard of this function, and made the following problem:\nYou are given a weighted graph with N nodes and E edges. Each node i in the graph has a value xi which is initially 0. You are to answer Q queries. Each query contains 2 integers u and k. For each node v in the graph you need to add f(k)+d(u,v) to xv where f(k) is the value returned by Anupam's function, and d(u,v) is the shortest distance between u and v.\nChef needs your help to solve this problem!\nFor all nodes i, you need to print the value of xi modulo 109+9 after processing all queries.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line contains 2 space separated integers integers N and E\nThe next E lines contains 3 space separated integers - u, v, w - denoting an edge of weight w between nodes u and v\nThe next line contains a single integer Q denoting number of queries. The queries follow.\nThe next Q lines contains each contain 2 space separated integers - u and k - as described above.\n\nOutput\nIn a single line, output N space separated integers, the ith of which represents xi\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa4300\n1\xe2\x89\xa4K\xe2\x89\xa4109\n1\xe2\x89\xa4Q\xe2\x89\xa43\xe2\x8b\x85105\n1\xe2\x89\xa4W\xe2\x89\xa4109\n1\xe2\x89\xa4E\xe2\x89\xa450000\n\nIt is guaranteed that the graph does not contain any self loops or multiple edges.\nSubtasks\nSubtask #1 (15 points): \n\n1\xe2\x89\xa4N,K\xe2\x89\xa420\n1\xe2\x89\xa4Q\xe2\x89\xa41000\n\nSubtask #2 (25 points): \n\n1\xe2\x89\xa4K\xe2\x89\xa4300\n1\xe2\x89\xa4Q\xe2\x89\xa41000\n\nSubtask #3 (30 points): \n\n1\xe2\x89\xa4K\xe2\x89\xa4300\n\nSubtask #4 (30 points): No additional constraints\nExample Input\n5 5\n1 2 7\n5 3 8\n2 4 7\n1 3 12\n4 5 6\n3\n1 1\n2 2\n3 3\n\nExample Output\n28 35 40 44 50\n\nExplanation\nLet's look at what happens with the 2nd query.\nu=2, k=2.\nf(2)=3 because the only subsets which can be selected are {1}, {2}, and {} (empty subset).\nd(1,2)=7.\nd(2,2)=0.\nd(3,2)=19.\nd(4,2)=7.\nd(5,2)=13.    \nSo, in this particular query, the changes were:\nx1+=10.\nx2+=3.\nx3+=22.\nx4+=10.\nx5+=16.    \n\n\n\nAuthor:\n5\xe2\x98\x85soham1234\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ANURAJ\n\n\nTags:\n\n               \n                 easy, floyd-warshall, icop1806, matrix-exponentiation, soham1234\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n2-01-2018\n\n\nTime Limit:\n1 - 3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"