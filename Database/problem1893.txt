b'\nRead problems statements in Hindi, Spanish, Mandarin chinese, Russian, Vietnamese and Bengali as well.\nAda has a farm in the shape of a convex polygon. For simplicity, the vertices of the polygon are numbered 1 through N in clockwise order.\nThere are many cows living on the farm. Cows fight often, so Ada wants to divide the farm into separate regions using fences to prevent accidents. Each fence can be considered a line segment.\nAda is worried about the free space available for each cow, so she needs to know the area of the region inhabited by a particular cow sometimes. As her apprentice, your task is to perform Q queries. There are two types of queries:\n\n1uv: Build a fence between vertices u and v. It is guaranteed that this fence does not intersect any previously built fence (but they may have common endpoints).\n2xy: Find the area of the region inhabited by a cow at position (x,y). Sometimes, the point may lie on a fence (the cow is trying to cross the fence); it may also be outside the farm or on its border (the cow is escaping!). In these cases, the area is 0.\n\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space-separated integers N and Q.\nN lines follow. For each i (1\xe2\x89\xa4i\xe2\x89\xa4N), the i-th of these lines contains two space-separated integers x and y denoting the coordinates of the i-th vertex.\nEach of the next Q lines contains three space-separated integers describing a query in the above format.\n\nOutput\nFor each query of the second type, print a single line containing one real number with exactly one decimal place \xe2\x80\x94 the area of the given region.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa44\n3\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4Q\xe2\x89\xa4105\nthe sum of N over all test cases does not exceed 3\xe2\x8b\x85105\nthe sum of Q over all test cases does not exceed 3\xe2\x8b\x85105\n1\xe2\x89\xa4u,v\xe2\x89\xa4N\n0\xe2\x89\xa4x,y\xe2\x89\xa42\xe2\x8b\x85109\nno three vertices are collinear\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n6 5\n5 0\n3 0\n0 3\n2 5\n6 5\n8 3\n2 3 1\n1 4 1\n2 3 1\n1 4 6\n2 6 4\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n27.0\n11.0\n4.0\n\n\nExplanation\nExample case 1:\n\nThe farm is a hexagon as depicted in the picture above. The queries are as follows:\n\nQuery on point G, the answer is the area of the hexagon.\nAdd fence AD, the farm is split into two regions.\nAgain a query on point G, the answer is the area of region ABCD.\nAdd fence DF, the farm is split into three regions in total.\nQuery on point H, the answer is the area of region DEF.\n\n\n\n\nAuthor:\n7\xe2\x98\x85alei\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ADAFARM\n\n\nTags:\n\n               \n                 alei, centroid-decomposition, cook99, disjoint-set-union, geometry, hard, implementation, taran_1407\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n9999\n\n\nDate Added:\n31-08-2018\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'