b"\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef has just started watching Game of Thrones, and he wants to first calculate the exact time (in minutes) that it'll take him to complete the series.\nThe series has SS seasons, and the ithith season has EiEi episodes, each of which are Li,1,Li,2,\xe2\x80\xa6,Li,Ei minutes long. Note that these Li,j include the duration of the beginning intro song in each episode. The streaming service that he uses, allows Chef to skip the intro song. The intro song changes slightly each season, and so he wants to watch the intro song in the first episode of each season, but he'll skip it in all other episodes of that season (yes, we know, a sacrilege!). You know that the intro song lasts for Qi minutes in the ith season.\nFind the total time in minutes, that he has to watch.\nInput:\n\nFirst line will contain a single integer, T, denoting the number of testcases. Then the testcases follow. \nThe first line of each testcase will contain a single integer S, denoting the total number of seasons.\nThe second line contains S space separated integers, Q1,Q2,\xe2\x80\xa6,QS, where Qi denotes the duration of the intro song in the ith season.\nThe ith of the next S lines contains Ei+1 space separated integers, where the first integer is Ei, denoting the number of episodes in the ith season. That is followed by the duration of each of the Ei episodes, Li,1,Li,2,\xe2\x80\xa6,Li,Ei. \n\nOutput:\nFor each testcase, output the answer in a single line.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa45\n1\xe2\x89\xa4S\xe2\x89\xa4105\n2\xe2\x89\xa4Li,j\xe2\x89\xa4105\n1\xe2\x89\xa4Ei\nSum of all Ei in a single testcase is at most 105\n1\xe2\x89\xa4Qi<Li,j, for all valid j.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n2\n1 2\n1 2\n2 3 4\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n7\n\n\nExplanation\n1 in the beginning denotes there is only 1 test case.\nTestcase 1:\nThere are 2 seasons. The intro song in each of the first season episodes lasts for 1 minute, and the intro song in the second season episodes lasts for 2 minutes each.\nFor the first season, since there is only 1 episode, Chef will be watching it completely - 2 minutes.\nFor the second season, Chef will be watching the first episode completely (3 minutes) and will skip the intro song of the second episode (4\xe2\x88\x922=2 minutes).\nSo, the total time spent is 2+(3+(4\xe2\x88\x922))=7 minutes.\n\n                        Sample Input 2\n                        \n\n\n\n\n\n2\n1\n10\n5 11 11 11 11 11\n5\n10 10 10 10 10\n1 11\n1 11\n1 11\n1 11\n1 11\n\n\n\n                        Sample Output 2\n                        \n\n\n\n\n\n15\n55\n\n\nExplanation\n2 in the beginning denotes there are 2 test cases.\nTestcase 1:\nThere is only 1 season having intro song for 10 minutes. \nChef will have to watch the entire first episode including the intro song and will be skipping the same in further seasons.\nSo, the total time spent is (11+(11\xe2\x88\x9210)\xe2\x88\x974)=15 minutes.\nTestcase 2:\nThere are total 5 seasons. The intro song in every season lasts for 10 minutes.\nFor each of the five seasons, since there is only 1 episode, Chef will be watching all of them completely - 11 minutes each.\nSo, the total time spent is 11\xe2\x88\x975=55 minutes.\n\n\n\nAuthor:\ndaanish_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/COLGLF2\n\n\nTags:\n\n               \n                 Mathematics, ad-hoc, Brute Force, Implementation\n                 \n                     \n                     Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1519\n\n\nDate Added:\n18-01-2021\n\n\nTime Limit:\n0.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"