b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nKuroni is not only a great programmer, but also a successful farmer. He has already built N cowsheds for his cows (numbered 1 through N) and equipped them with air conditioners, refrigerators, etc. Despite these facilities and high quality food, the cows do not seem to be happy. Through research, Kuroni figured out that cows also need the Internet to communicate and chit-chat with each other. \nKuroni decided to build a LAN system of connections between his cowsheds. Initially, no connections between the cowsheds exist. Then, for Q days (numbered 1 through Q), Kuroni adds some direct connections without removing any previously added connections. For each valid i, on the i-th day, Kuroni adds direct bidirectional connections between pairs of cowsheds (Li,Ri),(Li+1,Ri\xe2\x88\x921),\xe2\x80\xa6,(Ri,Li), i.e. (Li+k,Ri\xe2\x88\x92k) for each 0\xe2\x89\xa4k\xe2\x89\xa4Ri\xe2\x88\x92Li. (There may be multiple connections between some pairs of cowsheds. A cowshed may also be connected with itself.)\nTwo cowsheds are in the same group if they can communicate with each other either directly or indirectly \xe2\x80\x95 through connections with some other cowsheds. At the end of each day, tell Kuroni the number of groups of cowsheds that currently exist.\nInput\n\nThe first line of the input contains two space-separated integers N and Q.\nQ lines follow. For each valid i, the i-th of these lines contains two space-separated integers Li and Ri.\n\nOutput\nPrint Q lines. For each valid i, the i-th of these lines should contain a single integer \xe2\x80\x95 the number of groups at the end of the i-th day.\nConstraints\n\n2\xe2\x89\xa4N\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4Q\xe2\x89\xa45\xe2\x8b\x85105\n1\xe2\x89\xa4Li\xe2\x89\xa4Ri\xe2\x89\xa4N for each valid i\n\nSubtasks\nSubtask #1 (50 points): N,Q\xe2\x89\xa45,000\nSubtask #2 (50 points): original constraints\nExample Input 1\n5 3\n3 5\n4 5\n2 3\n\nExample Output 1\n4\n3\n2\n\nExample Input 2\n7 3\n3 5\n3 7\n1 7\n\nExample Output 2\n6\n4\n2\n\nExplanation\nExample case 1: On the first, second and third day, one connection between cowsheds (3,5), (4,5) and (2,3) is added, respectively.\nExample case 2:\n\nOn the first day, only one connection between cowsheds (3,5) is added, so the number of group is 6.\nOn the second day, connections between pairs of cowsheds (3,7) and (4,6) are added, so we now have four groups {1}, {2}, {3,5,7} and {4,6}.\nOn the third day, connections between pairs of cowsheds (1,7), (2,6) and (3,5) are added, so at the end, there are only two groups {1,3,5,7} and {2,4,6}.\n\n\n\n\nAuthor:\n6\xe2\x98\x85rhymastic\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/COWSHEDS\n\n\nTags:\n\n               \n                 Disjoint Set Union, Segment Trees, Hashing, Binary Search\n                 \n                     \n                     Advanced Data Structures, Advanced Tree Structures, Algorithms, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2966\n\n\nDate Added:\n25-06-2020\n\n\nTime Limit:\n4 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'