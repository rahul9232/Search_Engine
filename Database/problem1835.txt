b'\nRead problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.\nHeinz has recently learnt to moonwalk! Now he wants to practice it in the central park.\nWe know that Danville\'s central park consists of NN junctions (numbered 1 through N) and that M pairs of these junctions are connected by one-way roads (numbered 1 through M). First, Heinz picks a junction he starts from. Then, he alternately performs the following actions, starting with walking:\n\nWalk his way out of his current junction to another junction by a one-way road leading to that junction from his current junction.\nMoonwalk his way out of his current junction to another junction by a one-way road leading from that junction to his current junction. When Heinz does this, he is actually breaking the law (since he is using the one-way road in the wrong direction), but since he is moonwalking, no one will notice.\n\nHeinz plans to end up in the junction where he started after performing an even number of actions. However, he does not want to use any of the one-way roads more than once in any direction (using a road for both walking and moonwalking is not allowed either). It\'s worth noting that Heinz must walk at least one one-way road. Can he achieve this goal? If he can, find a sequence of roads he should use.\nInput\n\nThe first line of input contains an integer T, the number of cases to process.\nThe first line of each case contains two space-separated integers N and M.\nThe next M lines of each case each contains two space-separated integers v and u denoting a one-way road from junction v to junction u.\n\nOutput\n\nFor each case, if Heinz cannot achieve his goal, print a single line containing the string ":(".\nOtherwise, print three lines.\nThe first of these lines should contain the string ":)".\nThe second line should contain an even integer K denoting the number of roads Heinz should use.\nThe third line should contain K space-separated integers denoting the numbers of the roads Heinz should use, in the correct order.\n\nIf there are multiple solutions, you may output any one of them.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa45\n1\xe2\x89\xa4N,M\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4v,u\xe2\x89\xa4N\n\nExample Input\n2\n3 3\n1 2\n3 2\n3 1\n4 5\n1 2\n3 2\n1 4\n2 3\n3 4\n\nExample Output\n:(\n:)\n4\n3 5 2 1 \n\n\n\n\nAuthor:\n7\xe2\x98\x85kmaaszraa\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MNWLK\n\n\nTags:\n\n               \n                 Bipartite Graphs, Cycles, DFS, BFS\n                 \n                     \n                     Data Structures, Graphs, Algorithms, Graph Algos, Traversals\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3090\n\n\nDate Added:\n14-10-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'