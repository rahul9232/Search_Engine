b'\n Read problems statements in Mandarin Chinese and Russian as well.\n\nGiven a sequence of n distinct numbers a[1..n], we want to sort them in an ascending order.\n\n\nAn interesting property of some sequences is that all numbers are almost at their correct position! More formally, the distance between the current position of any value is at most 1 from its correct position in a sorted order.\n\n\nNow, you want to verify whether the input sequence has such a property.\n\n\nNote that the time limit for this problem is 0.2 seconds. Please try to write a very efficient algorithm and implementation.\n\nInput\nThe first line contains an integer T denoting the total number of test cases.\nFor each test case, the first line contains a single integer n, and the second line contains a[1..n] as a single space-separated list.\nOutput\nFor each test case, output "YES" or "NO" (without quotes) to indicate whether the input sequence has such a property.\nConstraints\n\n1 <= T <= 10\n1 <= n <= 10^6\n1 <= a[i] <= 10^9\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n3\n1 2 3\n5\n2 4 1 3 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\nYES\nNO\n\n\n\n\n\nAuthor:\njingbo_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ASP\n\n\nTags:\n\n               \n                 1D Arrays, ad-hoc\n                 \n                     \n                     Data Structures, Arrays, Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1686\n\n\nDate Added:\n10-10-2015\n\n\nTime Limit:\n0.2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'